<?php
/**
 * üóúÔ∏è –ú–ò–ù–ò–§–ò–ö–ê–¢–û–† CSS –î–õ–Ø –ì–¢–≠–ö
 * –£–º–µ–Ω—å—à–∞–µ—Ç —Ä–∞–∑–º–µ—Ä CSS —Ñ–∞–π–ª–æ–≤ –Ω–∞ 30-50%
 */

class CSSMinifier {
    public function minifyFile($filePath) {
        if (!file_exists($filePath)) {
            return false;
        }
        
        $css = file_get_contents($filePath);
        $originalSize = strlen($css);
        
        $minified = $this->minify($css);
        $newSize = strlen($minified);
        $saved = $originalSize - $newSize;
        $percent = round(($saved / $originalSize) * 100, 1);
        
        // –°–æ–∑–¥–∞–µ–º –º–∏–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é
        $minFilePath = str_replace('.css', '.min.css', $filePath);
        file_put_contents($minFilePath, $minified);
        
        return [
            'original' => $originalSize,
            'minified' => $newSize,
            'saved' => $saved,
            'percent' => $percent,
            'file' => $minFilePath
        ];
    }
    
    public function minify($css) {
        // –£–¥–∞–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ (–∫—Ä–æ–º–µ –≤–∞–∂–Ω—ã—Ö /*! */)
        $css = preg_replace('!/\*(?![!])[^*]*\*+([^/][^*]*\*+)*/!', '', $css);
        
        // –£–¥–∞–ª—è–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã –∏ –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫
        $css = preg_replace('/\s+/', ' ', $css);
        
        // –£–¥–∞–ª—è–µ–º –ø—Ä–æ–±–µ–ª—ã –≤–æ–∫—Ä—É–≥ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
        $css = preg_replace('/\s*([{}:;,>+~])\s*/', '$1', $css);
        
        // –£–¥–∞–ª—è–µ–º –ø—Ä–æ–±–µ–ª—ã –≤ –Ω–∞—á–∞–ª–µ –∏ –∫–æ–Ω—Ü–µ
        $css = trim($css);
        
        // –£–¥–∞–ª—è–µ–º –ª–∏—à–Ω–∏–µ —Ç–æ—á–∫–∏ —Å –∑–∞–ø—è—Ç–æ–π
        $css = preg_replace('/;+/', ';', $css);
        
        // –£–¥–∞–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Ç–æ—á–∫—É —Å –∑–∞–ø—è—Ç–æ–π –ø–µ—Ä–µ–¥ }
        $css = preg_replace('/;\s*}/', '}', $css);
        
        // –°–æ–∫—Ä–∞—â–∞–µ–º —Ü–≤–µ—Ç–∞ hex
        $css = preg_replace('/#([a-f0-9])\1([a-f0-9])\2([a-f0-9])\3/i', '#$1$2$3', $css);
        
        // –£–¥–∞–ª—è–µ–º –ª–∏—à–Ω–∏–µ –Ω—É–ª–∏
        $css = preg_replace('/(:|\s)0+\.(\d+)/S', '$1.$2', $css);
        $css = preg_replace('/(:|\s)\.0+(\d+)/S', '$1.$2', $css);
        $css = preg_replace('/(:|\s)0+(px|em|%|ex|cm|mm|in|pt|pc)/S', '$1', $css);
        
        return $css;
    }
    
    public function optimizeDirectory($directory) {
        echo "üóúÔ∏è –ú–∏–Ω–∏—Ñ–∏–∫–∞—Ü–∏—è CSS –≤: $directory\n";
        
        $cssFiles = glob($directory . '/*.css');
        $totalSaved = 0;
        $count = 0;
        
        foreach ($cssFiles as $file) {
            // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —É–∂–µ –º–∏–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
            if (strpos($file, '.min.css') !== false) {
                continue;
            }
            
            $result = $this->minifyFile($file);
            if ($result) {
                $totalSaved += $result['saved'];
                $count++;
                
                echo "‚úÖ " . basename($file) . " ‚Üí " . basename($result['file']) . "\n";
                echo "   –†–∞–∑–º–µ—Ä: " . round($result['original']/1024, 1) . "KB ‚Üí " . round($result['minified']/1024, 1) . "KB\n";
                echo "   –≠–∫–æ–Ω–æ–º–∏—è: " . round($result['saved']/1024, 1) . "KB ({$result['percent']}%)\n\n";
            }
        }
        
        echo "üìä –ò–¢–û–ì–û: $count —Ñ–∞–π–ª–æ–≤, " . round($totalSaved/1024, 1) . "KB —Å—ç–∫–æ–Ω–æ–º–ª–µ–Ω–æ\n";
        return $totalSaved;
    }
}

// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ
if (php_sapi_name() === 'cli' || isset($_GET['minify'])) {
    $minifier = new CSSMinifier();
    
    echo "üóúÔ∏è –ú–ò–ù–ò–§–ò–ö–ê–¶–ò–Ø CSS –§–ê–ô–õ–û–í –ì–¢–≠–ö\n";
    echo "=============================\n";
    
    $directories = [
        'assets/css'
    ];
    
    $totalSaved = 0;
    foreach ($directories as $dir) {
        if (is_dir($dir)) {
            $saved = $minifier->optimizeDirectory($dir);
            $totalSaved += $saved;
        }
    }
    
    echo "\nüéâ –ó–ê–í–ï–†–®–ï–ù–û! –û–±—â–∞—è —ç–∫–æ–Ω–æ–º–∏—è: " . round($totalSaved/1024, 1) . "KB\n";
    echo "üí° –°–æ–∑–¥–∞–π—Ç–µ —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∏–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ .min.css —Ñ–∞–π–ª—ã –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ\n";
    
} else {
    echo "<h1>üóúÔ∏è –ú–∏–Ω–∏—Ñ–∏–∫–∞—Ü–∏—è CSS –ì–¢–≠–ö</h1>";
    echo "<p><strong>–ù–∞–π–¥–µ–Ω–Ω—ã–µ CSS —Ñ–∞–π–ª—ã:</strong></p>";
    echo "<ul>";
    $files = glob('assets/css/*.css');
    foreach ($files as $file) {
        if (strpos($file, '.min.css') === false) {
            $size = filesize($file);
            echo "<li>" . basename($file) . " - " . round($size/1024, 1) . "KB</li>";
        }
    }
    echo "</ul>";
    echo "<p><a href='?minify=1' style='background:#17a2b8;color:white;padding:10px;text-decoration:none;border-radius:5px;'>üóúÔ∏è –ú–ò–ù–ò–§–ò–¶–ò–†–û–í–ê–¢–¨ CSS</a></p>";
}
?> 